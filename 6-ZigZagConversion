//
//  6-ZigZagConversion.cpp
//  leecode
//
//  Created by lixiangqian on 16/11/17.
//  Copyright © 2016年 lixiangqian. All rights reserved.
//

#include <iostream>
#include <stdio.h>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <math.h>
#include <stdlib.h>
using namespace std;
string convert(string s, int numRows) {
    long size = s.size();
    //注意字符串的初始化
    string ss(size,0) ;
    int start=1,end=numRows-2;
    int i=0;
    int step = 0;
    if(numRows ==1)
        return s;
    int maxstep = (numRows -1)*2;
    //第一行
    while (i < size) {
        ss[step] = s[i];
        step++;
        i += maxstep;
    }
    for(int k=start; k<=end; k++){
        int ii=k;
        //找到的规律
        int leftstep = (numRows -k -1)*2;
        int rightstep = maxstep -leftstep;
        bool leftfirst = true;
        while (ii < size) {
            ss[step] = s[ii];
            step++;
            if(leftfirst){
                ii += leftstep;
                leftfirst = false;
            }else{
                ii += rightstep;
                leftfirst = true;
            }
        }
    }
    i= numRows -1;
    //最后一行
    while(i < size){
        ss[step] = s[i];
        step++;
        i += maxstep;
    }
    return ss;
}
int main(){
    string a = "P";
    int numRows = 1;
    string b = convert(a, numRows);
    cout<<"hello world!"<<endl;
    cout<<b<<endl;
    return 0;
}
